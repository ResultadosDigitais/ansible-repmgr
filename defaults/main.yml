---
repmgr_inventory_group: repmgr_cluster_group
repmgr_package_state: present

repmgr_packages:
  - postgresql-9.6-repmgr
  - python-psycopg2
  - rsync
  - ssh

repmgr_conf: /etc/repmgr.conf
repmgr_user: postgres
repmgr_group: postgres
repmgr_cluster_group: all
repmgr_bootstrap: off
repmgr_data_directory: /var/lib/postgresql/9.6/main

repmgr_node_id: 01
repmgr_is_master: off
repmgr_master_node: "{{ hostvars[groups[repmgr_cluster_group][0]].ansible_default_ipv4.address }}"
repmgr_node_name: "{{ ansible_default_ipv4.address }}"
repmgr_node_address: "{{ ansible_default_ipv4.address }}"
repmgr_db_name: repmgr
repmgr_db_user: repmgr
# repmgr_db_password must be set
repmgr_conninfo: "host={{ repmgr_node_address }} dbname={{ repmgr_db_name }} user={{ repmgr_db_user }}"
#repmgr_upstream_node:
repmgr_use_replication_slots: 0
repmgr_log_level: NOTICE
repmgr_log_facility: LOCAL0
#repmgr_log_file: /var/log/repmgr/repmgr.log

# Set mandatory on usage
# repmgr_ssh_private_key:
# repmgr_ssh_public_key:

# %n - node id
# %e - event type
# %s - success (1 or 0)
# %t - timestamp
# %d - description

repmgr_event_notification_command: /bin/true  %n %e %s "%t" "%d"

# Where event type is one of:
#   master_register
#   standby_register
#   standby_unregister
#   standby_clone
#   standby_promote
#   witness_create
#   repmgrd_start
#   repmgrd_monitor
#   repmgrd_failover_promote
#   repmgrd_failover_follow

repmgr_event_notifications: []

# repmgr_pg_bindir highly recommend to set up
repmgr_rsync_options: --archive --checksum --compress --progress --rsh="ssh -o \"StrictHostKeyChecking no\""
repmgr_ssh_options: -o "StrictHostKeyChecking no"
repmgr_pg_ctl_options: "-s"
repmgr_pg_basebackup_options: "--label=repmgr_backup"
repmgr_reconnect_attempts: 6
repmgr_reconnect_interval: 10
repmgr_failover: automatic
repmgr_priority: 100
repmgr_promote_command: repmgr standby promote -f {{ repmgr_conf }}
repmgr_follow_command: repmgr standby follow -f {{ repmgr_conf }} -W
repmgr_monitor_interval_secs: 2
repmgr_primary_notification_timeout: 300
repmgr_pg_bindir: /usr/bin

# Cron variables:

repmgr_cron: []

# repmgr_cron:
#   hour: 4
#   minute: 0
#   day: *
#   job: "psql -U postgres repmgr -c \"DELETE * FROM repmgr_test.repl_monitor WHERE last_monitor_time < current_timestamp - interval '4d'\""
#   name: "Removing repl_monitor old records"
#   weekday: *
#   user: "postgres"
#   month: *
#   weekday: *  
#   disabled: false

# Need cron task or not
repmgr_cron_status: True

repmgr_witness_sync_internal: 15

# barman
#repmgr_barman_host: "[server]"
#repmgr_barman_server: backup_server
#repmgr_barman_config: /etc/barman.conf

repmgr_service_start_command: 'sudo pg_ctlcluster 9.6 main start'
repmgr_service_stop_command: 'sudo pg_ctlcluster 9.6 main stop'
repmgr_service_restart_command: 'sudo pg_ctlcluster 9.6 main restart'
repmgr_service_reload_command: 'sudo pg_ctlcluster 9.6 main reload'
repmgr_service_promote_command: 'sudo pg_ctlcluster 9.6 main promote'
